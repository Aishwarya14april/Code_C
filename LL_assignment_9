#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};
void reverse(struct node** h)
{
    struct node* prev = NULL;
    struct node* current = *h;
    struct node* next = NULL;
    while (current != NULL) {
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
    }
    *h = prev;
}
void merge(struct node **h1,struct node **h2)
{ struct node *ptr;
    for(ptr=*h2;ptr!=NULL;ptr=ptr->next)
    {
    }
    ptr->next=*h1;
}
int main()
{
    struct node *head1,*head2,*ptr,*cur;
    int n1,n2;
    scanf("%d %d",&n1,&n2);
    for(int i=0;i<n1;i++)
    {
    cur=(struct node *)malloc(sizeof(struct node *));
    cur->next=NULL;
    scanf("%d",&cur->data);
    if(head1==NULL)
    {
        head1=ptr=cur;
    }
    else
    {
        ptr->next=cur;
        ptr=cur;
    }
    }
    for(int i=0;i<n2;i++)
    {
    cur=(struct node *)malloc(sizeof(struct node *));
    cur->next=NULL;
    scanf("%d",&cur->data);
    if(head2==NULL)
    {
        head2=ptr=cur;
    }
    else
    {
        ptr->next=cur;
        ptr=cur;
    }
    }
    reverse(&head1);
    reverse(&head2);
    merge(&head1,&head2);
    return 0;
}
